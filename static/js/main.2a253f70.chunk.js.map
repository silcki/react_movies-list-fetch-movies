{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","loader","setLoader","_useState5","_useState6","noResult","setNoResult","_useState7","_useState8","foundMovie","setFoundMovie","_Fragment","onSubmit","e","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","trim","data","movieData","newMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","disabled","onClick","App","setMovies","some","prev","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a253f70.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [loader, setLoader] = useState(false);\n  const [noResult, setNoResult] = useState(false);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setNoResult(false);\n  };\n\n  const searchHandle = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoader(true);\n    getMovie(query.trim())\n      .then(data => {\n        if (!data || ('Response' in data && data.Response === 'False')) {\n          setNoResult(true);\n          setFoundMovie(null);\n        } else {\n          const movieData = data as MovieData;\n\n          const newMovie: Movie = {\n            title: movieData.Title,\n            description: movieData.Plot,\n            imgUrl: movieData.Poster !== 'N/A'\n              ? movieData.Poster\n              : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n            imdbId: movieData.imdbID,\n          };\n\n          setFoundMovie(newMovie);\n        }\n      })\n      .catch(() => setFoundMovie(null))\n      .finally(() => setLoader(false));\n  };\n\n  const addHandler = () => {\n    setQuery('');\n    if (foundMovie) {\n      onAdd(foundMovie);\n    }\n\n    setFoundMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={searchHandle}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': noResult,\n              })}\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n\n          {noResult && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query}\n              className={classNames('button is-light', {\n                'is-loading': loader,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addHandler()}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            movie={foundMovie}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=8fcdfee1';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.some(({ imdbId }) => imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies(prev => [...prev, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}